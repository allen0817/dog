<?php
/**
 * Created by PhpStorm.
 * User: allen
 * Date: 2019/6/12
 * Time: 16:53
 */

namespace app\controllers;


use app\common\Cat;
use app\common\Dog;
use app\common\First;
use app\common\Mouse;
use app\common\My;
use app\common\helpers\ArrayHelper;
use app\common\Snake;
use app\common\Test;
use app\common\Test1;
use app\models\Grade;
use phpDocumentor\Reflection\Types\ContextFactory;
use Yii;
use yii\base\Event;
use yii\base\Model;
use yii\db\Query;
use yii\db\Transaction;
use yii\di\Container;
use yii\filters\AccessControl;
use yii\helpers\Json;
use yii\helpers\Url;
use yii\i18n\Formatter;
use yii\web\Controller;
use yii\web\Cookie;
use yii\web\Response;
use yii\web\View;

class TestController extends  Controller
{
	public  function actions()
	{
		return parent::actions(); // TODO: Change the autogenerated stub
	}
	public function  actionIndex()
	{
//		$m = new Member();

//		$data = $m::find()->select([])->asArray()->all();
		//pre($data);
//		$a = $m::findOne(1);
//		pre($a->attributes);
//		$b = $m::findall([1,2]);
		//pre($b);
//		$c = ArrayHelper::getColumn($b,function ($model){
//			return $model->attributes;
//		});
//		pre($c);
//		pre(ArrayHelper::list_sort_by($c,'name','desc'));
//		pre(ArrayHelper::selectArray($c,'name','a',true));

//		$request =  Yii::$app->request;
//
//		pre(Yii::$app->request->get());
//		pre($request->bodyParams);
//		pre($request->userAgent);
//		pre($request->isGet);
//		pre($request->userIP);

//		Yii::$app->response->content = 'hello world!';
//		$response = Yii::$app->response;
//		$response->format = \yii\web\Response::FORMAT_JSON;
//		$response->data = ['message' => 'hello world'];

//		$res = Yii::$app->response;
//		$res->format=  Response::FORMAT_JSON;
//		$res->data = ['message' => 'hello world'];


//		$cookie = Yii::$app->response->cookies;
//		$cookie->add(new Cookie([
//			'name' => 'name',
//			'value' => 'allen',
//			'expire' => time()+30,
//		]));

//		$cookie->remove('name');


//		$my = new My();
		// $my->setName('allen');
//		$my->name = 'hello world';
//		echo $my->name, PHP_EOL;

//		$container = new Container();
//		$container->set('app\common\First',[
//			'class' => 'app\common\First',
//			'name' => 'cat'
//		]);
//		$container->get('app\common\First')->hello();
//		$container->set('my',[
//			'class' => 'app\common\First',
//			'name' => 'allen',
//		]);
//		$container->get('my')->hello();

		//依赖注入方式
//		$test = new Test();
//		$first = new First();
//		$first->setTest($test);
//		$first->name = 'allen';
//		$first->hello();
//		echo "<br>";
//		//容器方式
//		$container = new Container();
//		$container->set('my',[
//			'class' => 'app\common\First',
//			'name' => 'cat',
////			'test' => new Test1()
//			'test' => [
//				'class' => 'app\common\Test1'
//			]
//		]);
//		$container->get('my')->hello();

		#数据库
		echo "<br>";
		$db = Yii::$app->db;

//		echo Yii::$app->db->createCommand('select count(*) from {{%grade}}')->queryScalar();

//		$res = $db->createCommand('select id from grade')->queryColumn();


//		$level = Transaction::REPEATABLE_READ; //隔离级别
//		$db->transaction(function ($db) use ($res){
//			foreach($res as $v){
//				$db->createCommand('update {{%grade}} set score=:score where id=:id')
//					->bindValues([':id'=> $v,':score'=> mt_rand(1,100)])
//					->execute();
//			}
//		},$level);

//		$table = $db->getTableSchema('grade');


		// 数据绑定安全
//		$c  = 1000 .  ' ; ( update grade set score=100)';
//		$db->createCommand("update {{%grade}} set score=:score where id=:id ")
//			->bindValues([':id'=>1,':score'=>$c])
//			->execute();

		//这种方式不安全，亲测有问题
//		$db->createCommand("update {{%grade}} set score=$c where id=1 ")->execute();

		//跌代获取数据
//		$query  = (new Query())->from(['g'=> Grade::tableName() ])->indexBy('id');
//		foreach ($query->batch(3) as $i => $v){
//			p($v);
//		}

// 		$redis = Yii::$app->redis;
// //		$redis->set('name','allen');
// 		echo $redis->get('name');

//		echo ctype_alnum('sfwfew8484'); 字母和数字检测
//		echo ctype_alpha('fsfwfwf'); 纯字母检测
//		echo ctype_digit('894864G');纯数字检测

		$password = 'hello_world';
//		echo $hash = Yii::$app->getSecurity()->generatePasswordHash($password);
//		echo "<br>";
//		$hash2 = Yii::$app->getSecurity()->generatePasswordHash($password);
//		echo "<br>";
//		if (Yii::$app->getSecurity()->validatePassword($password, $hash2)) echo 1;
		//随机数
//		echo $key = Yii::$app->getSecurity()->generateRandomString(5);
		//通过密码加解密
//		$d = Yii::$app->getSecurity()->encryptByPassword('allen','hello');
//		echo  Yii::$app->getSecurity()->decryptByPassword($d,'hello');
		//通过密钥加解密
//		$d =  Yii::$app->getSecurity()->encryptByKey('bbb','aaa','gg');
//		Yii::$app->getSecurity()->decryptByKey($d,'aaa','gg');


		$first = new First();
//		$first->name = 'bby';
		// unset($first->name);
		// if($first->name){
		// 	echo 'isset';
		// }else{
		// 	echo 'no insset';
		// }
//		if($first->hasProperty('name'))echo 1;
//		else echo 2;
//		if($first->canGetProperty('name')) echo 1;
//		else echo 2;




//		$this->on('b',function (){
//			echo 'hello';
//		});
//		$this->trigger('b');


		$cat = new Cat(); //继承 Component
		$mouse = new Mouse();
		$dog = new Dog();
		//绑定事件
		$cat->on(Cat::MAO_EVENT,[$mouse,'run'],['name'=>'hello']);
		//绑定事件
		$cat->on($cat::MAO_EVENT,[$dog,'wang']);
		//猫叫触发事件
		$cat->shout();

//		类级别事件绑定后可以使用 (new Cat())->shout();触发
//		Event::on(Cat::className() ,Cat::MAO_EVENT, [$mouse, 'run']);

		echo "<br>============<br>";

		//简单使用，相当于实例化
		$this->on('ss',[$mouse,'run']);
		$this->trigger('ss');






		// return $this->render('index');

	}


	public function actionJ()
	{
		$name = Yii::$app->request->get('name' , 'allen');
		Yii::$app->response->format = Response::FORMAT_JSON;
		return ['name' => $name];
	}



	public  function behaviors1()
	{
		return [
			'access' => [
				'class' => AccessControl::className(),
				'rules' =>[
					[
						'allow' => true,
						'actions' => ['index'],
//						'denyCallback' => function(){
//							$this->redirect(['/site/index']);
//						}
//						'roles'=>['@']
						'roles' => ['?']
					],
				],
			],
		];
	}

	public function  actionR(){
		echo '设置缓存<br>';
		$redis = Yii::$app->redis;
		$redis->set('name','allen');
		$redis->expire('name',5);

	}

	public function  actionAjax(){
//		return Yii::$app->getResponse()->redirect('/config/index');
//		Yii::$app->getResponse()->redirect('/config/index')->send();
//		return;
		$file = Yii::getAlias('@app') . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . 'a.txt';
		$file = Yii::getAlias('@webroot') . DIRECTORY_SEPARATOR . 'robots.txt';

//		return Yii::$app->response->sendFile($file);
		return 77;
	}

	public function  actionF(){
		$file = 'C:\Users\allen\Desktop\邓丽君.zip';
		$hd = fopen($file,'r');
		return Yii::$app->response->sendStreamAsFile($hd,'哥哥');
	}



}